---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "knative-operator.webhook.fullname" . }}
  labels:
    {{- include "knative-operator.webhook.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "knative-operator.webhook.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "false"
        {{- with .Values.webhook.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "knative-operator.webhook.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "knative-operator.webhook.serviceAccountName" . }}
      containers:
        - name: operator-webhook
          # This is the Go import path for the binary that is containerized
          # and substituted here.
          image: "{{ .Values.webhook.image.repository }}:{{ .Values.webhook.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: METRICS_DOMAIN
              value: knative.dev/operator
            - name: CONFIG_LOGGING_NAME
              value: {{ include "knative-operator.fullname" . }}-config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: {{ include "knative-operator.fullname" . }}-config-observability
            - name: WEBHOOK_NAME
              value: operator-webhook
            - name: WEBHOOK_PORT
              value: "8443"
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
            - name: https-webhook
              containerPort: 8443
          securityContext:
            {{- toYaml .Values.webhook.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.webhook.resources | nindent 12 }}
          readinessProbe:
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
          livenessProbe:
            periodSeconds: 1
            httpGet:
              scheme: HTTPS
              port: 8443
              httpHeaders:
                - name: k-kubelet-probe
                  value: "webhook"
            failureThreshold: 6
            initialDelaySeconds: 20
      {{- with .Values.webhook.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhook.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhook.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.webhook.podSecurityContext | nindent 8 }}
      {{- with .Values.webhook.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      # Our webhook should gracefully terminate by lame ducking first, set this to a sufficiently
      # high value that we respect whatever value it has configured for the lame duck grace period.
      terminationGracePeriodSeconds: 300
