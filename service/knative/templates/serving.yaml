{{- if .Values.server.enabled }}
---
apiVersion: operator.knative.dev/v1beta1
kind: KnativeServing
metadata:
  name: knative-serving
spec:
  version: {{ .Values.version | quote }}
  high-availability:
    replicas: {{ .Values.server.replicas }}
  {{- if .Values.server.security }}
  security:
    securityGuard:
      enabled: {{ .Values.server.security.guard }}
  {{- end }}
  ingress:
    {{- if eq .Values.server.ingress.type "kourier" }}
    kourier:
      enabled: true
      service-type: {{ .Values.server.network.kourier.service.type }}
    {{- end }}
    {{- if eq .Values.server.ingress.type "gateway-api" }}
    istio:
      enabled: false
    {{- end }}
  config:
    domain:
      "{{ .Values.server.domain }}": ""
    {{- if .Values.server.certmanager.enabled }}
    certmanager:
      issuerRef: |
        kind: ClusterIssuer
        name: {{ .Values.server.certmanager.issuerRef.clusterIssuer.name }}
      clusterLocalIssuerRef: |
        kind: ClusterIssuer
        name: {{ .Values.server.certmanager.issuerRef.clusterIssuer.name }}
      systemInternalIssuerRef: |
        kind: Issuer
        name: {{ .Values.server.certmanager.issuerRef.localIssuer.name }}
    {{- end }}
    {{- if eq .Values.server.ingress.type "gateway-api" }}
    gateway:
      external-gateways: |
        - class: cilium
          gateway: {{ .Values.server.network.gatewayAPI.external.name | default "kube-system/default" }}
          service: {{ .Values.server.network.gatewayAPI.external.service | default "kube-system/cilium-gateway-default" }}
          supported-features:
            - HTTPRouteRequestTimeout
      local-gateways: |
        - class: cilium
          gateway: {{ .Values.server.network.gatewayAPI.internal.name | default "kube-system/knative" }}
          service: {{ .Values.server.network.gatewayAPI.internal.service | default "kube-system/cilium-gateway-knative" }}
          supported-features:
            - HTTPRouteRequestTimeout
    {{- end }}
    network:
      {{- if eq .Values.server.ingress.type "kourier" }}
      ingress-class: kourier.ingress.networking.server.dev
      {{- end }}
      {{- if eq .Values.server.ingress.type "gateway-api" }}
      ingress-class: gateway-api.ingress.networking.knative.dev
      {{- end }}
      {{- if .Values.server.certmanager.enabled }}
      auto-tls: Enabled
      http-protocol: Redirected
      namespace-wildcard-cert-selector: '{"matchExpressions": [{"key":"networking.knative.dev/disableWildcardCert", "operator": "NotIn", "values":["true"]}]}'
      {{- end }}
    deployment:
      registriesSkippingTagResolving: kind.local,ko.local,dev.local,knative.registry.svc.cluster.local
  {{- if .Values.server.network.gatewayAPI.install }}
  additionalManifests:
    - URL: https://raw.githubusercontent.com/knative-extensions/net-gateway-api/refs/tags/{{ .Values.server.network.gatewayAPI.version | default "v0.43.0" }}/config/200-clusterrole.yaml
    - URL: https://raw.githubusercontent.com/knative-extensions/net-gateway-api/refs/tags/{{ .Values.server.network.gatewayAPI.version | default "v0.43.0" }}/config/300-controller.yaml
    - URL: https://raw.githubusercontent.com/knative-extensions/net-gateway-api/refs/tags/{{ .Values.server.network.gatewayAPI.version | default "v0.43.0" }}/config/400-webhook-deployment.yaml
    - URL: https://raw.githubusercontent.com/knative-extensions/net-gateway-api/refs/tags/{{ .Values.server.network.gatewayAPI.version | default "v0.43.0" }}/config/400-webhook-secret.yaml
    - URL: https://raw.githubusercontent.com/knative-extensions/net-gateway-api/refs/tags/{{ .Values.server.network.gatewayAPI.version | default "v0.43.0" }}/config/400-webhook-service.yaml
    - URL: https://raw.githubusercontent.com/knative-extensions/net-gateway-api/refs/tags/{{ .Values.server.network.gatewayAPI.version | default "v0.43.0" }}/config/500-validating-webhook.yaml
    - URL: https://raw.githubusercontent.com/knative-extensions/net-gateway-api/refs/tags/{{ .Values.server.network.gatewayAPI.version | default "v0.43.0" }}/config/config-gateway.yaml
  {{- end }}
{{- end }}
