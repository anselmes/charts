{{- $global := .Values.global | default dict }}
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: K0sControlPlane
metadata:
  name: {{ include "k0scontrolplane.name" . }}
spec:
  replicas: {{ .Values.controlPlaneNumber }}
  version: {{ .Values.k0s.version }}
  k0sConfigSpec:
    {{- if $global.k0sURL }}
    downloadURL: "{{ $global.k0sURL }}/k0s-{{ .Values.k0s.version }}-amd64"
    {{- end }}
    files:
      - path: /home/{{ .Values.controlPlane.ssh.user }}/.ssh/authorized_keys
        permissions: "0600"
        content: "{{ trim .Values.controlPlane.ssh.publicKey }}"
    preStartCommands:
      - chown {{ .Values.controlPlane.ssh.user }} /home/{{ .Values.controlPlane.ssh.user }}/.ssh/authorized_keys
      - sed -i 's/"externalAddress":"{{ .Values.controlPlaneEndpointIP }}",//' /etc/k0s.yaml
    args:
      - --enable-worker
      - --disable-components=konnectivity-server
    k0s:
      apiVersion: k0s.k0sproject.io/v1beta1
      kind: ClusterConfig
      metadata:
        name: k0s
      spec:
        api:
          sans:
            - {{ .Values.controlPlaneEndpointIP }}
          extraArgs:
            anonymous-auth: "true"
            {{- with .Values.k0s.api.extraArgs }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
        network:
          provider: calico
          calico:
            mode: vxlan
        {{- if $global.registry }}
        images:
          metricsserver:
            image: "{{ $global.registry}}/k0sproject/metrics-server"
          kubeproxy:
            image: "{{ $global.registry}}/k0sproject/kube-proxy"
          coredns:
            image: "{{ $global.registry}}/k0sproject/coredns"
          pause:
            image: "{{ $global.registry}}/k0sproject/pause"
          calico:
            cni:
              image: "{{ $global.registry}}/k0sproject/calico-cni"
            node:
              image: "{{ $global.registry}}/k0sproject/calico-node"
            kubecontrollers:
              image: "{{ $global.registry}}/k0sproject/calico-kube-controllers"
        {{- end }}
        extensions:
          helm:
            {{- if not $global.registry }}
            repositories:
            - name: kube-vip
              url: https://kube-vip.github.io/helm-charts
            - name: mirantis
              url: https://charts.mirantis.com
            {{- end }}
            charts:
            - name: kube-vip
              {{- if $global.registry }}
              chartname: oci://{{ $global.registry}}/charts/kube-vip
              {{- else }}
              chartname: kube-vip/kube-vip
              {{- end }}
              version: 0.6.1
              order: 1
              namespace: kube-system
              values: |
                {{- if $global.registry }}
                image:
                  repository: {{ $global.registry }}/kube-vip
                {{- end }}
                config:
                  address: {{ .Values.controlPlaneEndpointIP }}
                env:
                  svc_enable: "true"
                  cp_enable: "true"
                  lb_enable: "false"
                nodeSelector:
                  node-role.kubernetes.io/control-plane: "true"
                tolerations:
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/master
                    operator: Exists
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/control-plane
                    operator: Exists
                  - effect: NoSchedule
                    key: node.cloudprovider.kubernetes.io/uninitialized
                    value: "true"
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: RemoteMachine
      name: {{ include "vspheremachinetemplate.controlplane.name" . }}
      namespace: {{ .Release.Namespace }}
